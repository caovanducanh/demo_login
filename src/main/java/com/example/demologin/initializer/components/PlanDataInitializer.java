package com.example.demologin.initializer.components;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.example.demologin.entity.Plan;
import com.example.demologin.repository.PlanRepository;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

/**
 * Plan Data Initializer
 * 
 * Responsible for creating default subscription plans for the system.
 * These plans define different service tiers and pricing options.
 */
@Component
@RequiredArgsConstructor
@Slf4j
public class PlanDataInitializer {

    private final PlanRepository planRepository;

    @Transactional
    public void initializePlans() {
        log.info("üí≥ Initializing subscription plans...");
        
        if (planRepository.count() > 0) {
            log.info("‚ÑπÔ∏è Plans already exist, skipping plan initialization");
            return;
        }

        createDefaultPlans();
        
        log.info("‚úÖ Successfully initialized {} subscription plans", planRepository.count());
    }

    private void createDefaultPlans() {
        log.debug("üìã Creating default subscription plans...");
        
        LocalDateTime now = LocalDateTime.now();
        
        List<Plan> plans = List.of(
            Plan.builder()
                .name("G√≥i C∆° B·∫£n")
                .description("G√≥i c∆° b·∫£n v·ªõi c√°c t√≠nh nƒÉng thi·∫øt y·∫øu cho h·ªçc sinh v√† gi√°o vi√™n. " +
                           "Bao g·ªìm truy c·∫≠p c√°c b√†i h·ªçc c∆° b·∫£n, l√†m b√†i ki·ªÉm tra v√† xem k·∫øt qu·∫£.")
                .price(0.0)
                .durationDays(30)
                .createdAt(now)
                .updatedAt(now)
                .build(),
                
            Plan.builder()
                .name("G√≥i Premium")
                .description("G√≥i premium v·ªõi ƒë·∫ßy ƒë·ªß t√≠nh nƒÉng n√¢ng cao. " +
                           "Bao g·ªìm t·∫•t c·∫£ t√≠nh nƒÉng c·ªßa g√≥i c∆° b·∫£n, th√™m c√°c b√†i h·ªçc n√¢ng cao, " +
                           "ph√¢n t√≠ch chi ti·∫øt k·∫øt qu·∫£, v√† h·ªó tr·ª£ ∆∞u ti√™n.")
                .price(199000.0)
                .durationDays(30)
                .createdAt(now)
                .updatedAt(now)
                .build(),
                
            Plan.builder()
                .name("G√≥i VIP")
                .description("G√≥i VIP v·ªõi t·∫•t c·∫£ t√≠nh nƒÉng cao c·∫•p v√† d·ªãch v·ª• c√° nh√¢n h√≥a. " +
                           "Bao g·ªìm t·∫•t c·∫£ t√≠nh nƒÉng c·ªßa g√≥i premium, th√™m t∆∞ v·∫•n m·ªôt-m·ªôt v·ªõi gi√°o vi√™n, " +
                           "t√†i li·ªáu ƒë·ªôc quy·ªÅn, v√† kh√¥ng gi·ªõi h·∫°n truy c·∫≠p.")
                .price(399000.0)
                .durationDays(30)
                .createdAt(now)
                .updatedAt(now)
                .build(),
                
            Plan.builder()
                .name("G√≥i H·ªçc K·ª≥")
                .description("G√≥i ƒëƒÉng k√Ω cho c·∫£ h·ªçc k·ª≥ v·ªõi gi√° ∆∞u ƒë√£i. " +
                           "Bao g·ªìm t·∫•t c·∫£ t√≠nh nƒÉng premium trong 6 th√°ng, " +
                           "ph√π h·ª£p cho vi·ªác h·ªçc t·∫≠p l√¢u d√†i.")
                .price(999000.0)
                .durationDays(180)
                .createdAt(now)
                .updatedAt(now)
                .build(),
                
            Plan.builder()
                .name("G√≥i NƒÉm H·ªçc")
                .description("G√≥i ƒëƒÉng k√Ω cho c·∫£ nƒÉm h·ªçc v·ªõi m·ª©c gi√° t·ªët nh·∫•t. " +
                           "Bao g·ªìm t·∫•t c·∫£ t√≠nh nƒÉng VIP trong 12 th√°ng, " +
                           "ti·∫øt ki·ªám t·ªëi ƒëa cho h·ªçc sinh v√† ph·ª• huynh.")
                .price(1799000.0)
                .durationDays(365)
                .createdAt(now)
                .updatedAt(now)
                .build(),
                
            Plan.builder()
                .name("G√≥i Gi√°o Vi√™n")
                .description("G√≥i d√†nh ri√™ng cho gi√°o vi√™n v·ªõi c√°c c√¥ng c·ª• qu·∫£n l√Ω l·ªõp h·ªçc. " +
                           "Bao g·ªìm t·∫°o b√†i ki·ªÉm tra, qu·∫£n l√Ω h·ªçc sinh, ph√¢n t√≠ch k·∫øt qu·∫£ h·ªçc t·∫≠p, " +
                           "v√† c√¥ng c·ª• h·ªó tr·ª£ gi·∫£ng d·∫°y.")
                .price(299000.0)
                .durationDays(30)
                .createdAt(now)
                .updatedAt(now)
                .build()
        );

        planRepository.saveAll(plans);
        log.debug("‚úÖ Created {} subscription plans", plans.size());
    }
}